print("Script loading..")
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "B0bby hub (BETA)",
   Icon = 99972211610543, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "B0bby hub",
   LoadingSubtitle = "Loading..",
   Theme = "AmberGlow",

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true,
   KeySettings = {
      Title = "Is bob cool?",
      Subtitle = "Yes or no?",
      Note = "Hint: Yes", -- Use this to tell the user how to get a key
      FileName = "B0bbyKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Yes"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Section = Tab:CreateSection("UNDER MAINTENANCE")

local Button = Tab:CreateButton({
   Name = "Esp twisteds",
   Callback = function() 

   end,
})

local Button = Tab:CreateButton({
   Name = "esp Items",
   Callback = function()

   end,
})

local Button = Tab:CreateButton({
   Name = "esp Generators",
   Callback = function()
    
   end,
})

local Section = Tab:CreateSection("Visual/Client-Sided (More Will be added) ")

local Button = Tab:CreateButton({
   Name = "Fullbright",
   Callback = function()
-- Improved Visibility Script
game:GetService("Lighting").Brightness = 0.7
game:GetService("Lighting").Ambient = Color3.new(0.75, 0.75, 0.75)
game:GetService("Lighting").OutdoorAmbient = Color3.new(0.75, 0.75, 0.75)
game:GetService("Lighting").GlobalShadows = false
game:GetService("Lighting").FogEnd = 100000
   end,
})

local Button = Tab:CreateButton({
   Name = "Become dandy(USE BOXTEN + In Lobby Only)",
   Callback = function()
loadstring(game:HttpGet("https://pastefy.app/GyL3OYAW/raw"))()
   end,
})

local Input = Tab:CreateInput({
   Name = "Change DisplayName",
   CurrentValue = "",
   PlaceholderText = "Input Placeholder",
   RemoveTextAfterFocusLost = false,
   Flag = "Input1",
   Callback = function(Text)
game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.DisplayName.Text = (Text)
   end,
})
local Input = Tab:CreateInput({
   Name = "Change UserName",
   CurrentValue = "",
   PlaceholderText = "Input Placeholder",
   RemoveTextAfterFocusLost = false,
   Flag = "Input2",
   Callback = function(Text)
   game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.UserName.Text = (Text)
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Show Owner Tag",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.Visible = (Value)
   end,
})

local Input = Tab:CreateInput({
   Name = "Change Owner Tag",
   CurrentValue = "",
   PlaceholderText = "Input Placeholder",
   RemoveTextAfterFocusLost = false,
   Flag = "Input3",
   Callback = function(Text)
game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.Text = (Text)
game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.TextColor3 = Color3.fromRGB(255, 255, 255)
game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.Visible = true
   end,
})

local ColorPicker = Tab:CreateColorPicker({
    Name = "NameTag Color Picker",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.UserName.TextColor3 = Value
    game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.GroupRank.TextColor3 = Value
    game.Players.LocalPlayer.Character.HumanoidRootPart.NameTag.Frame.UserName.TextColor3 = Value
    end
})

local Section = Tab:CreateSection("Other")

local Toggle = Tab:CreateToggle({
   Name = "auto skillcheck",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local runService = game:GetService("RunService")
        local virtualInputManager = game:GetService("VirtualInputManager")
        local player = game.Players.LocalPlayer
        local ScreenGui = player:WaitForChild("PlayerGui"):FindFirstChild("ScreenGui")

        -- Declarar conexiأ³n fuera de la funciأ³n
        if not _G.connection then _G.connection = nil end

        -- Verificaciأ³n inicial
        if not ScreenGui then
            warn("ScreenGui not found.")
            return
        end

        local menu = ScreenGui:FindFirstChild("Menu")
        local skillCheckFrame = menu and menu:FindFirstChild("SkillCheckFrame")
        local marker = skillCheckFrame and skillCheckFrame:FindFirstChild("Marker")
        local goldArea = skillCheckFrame and skillCheckFrame:FindFirstChild("GoldArea")
        local calibrateButton = menu and menu:FindFirstChild("Calibrate")

        if not (marker and goldArea and calibrateButton) then
            warn("Required elements not found.")
            return
        end

        local timeElapsed = 0
        local checkInterval = 0.01

        -- Funciأ³n para presionar la tecla espacio
        local function pressSpace()
            if skillCheckFrame.Visible then
                virtualInputManager:SendKeyEvent(true, Enum.KeyCode.Space, false, game)
                virtualInputManager:SendKeyEvent(false, Enum.KeyCode.Space, false, game)
            end
        end

        -- Funciأ³n para comprobar la posiciأ³n de los frames
        local function checkFramesPosition()
            local frame1X = marker.AbsolutePosition.X
            local frame2X = goldArea.AbsolutePosition.X
            local minRange = frame2X
            local maxRange = frame2X + 10

            if frame1X >= minRange and frame1X <= maxRange then
                pressSpace()
            end
        end

        -- Si el toggle estأ، activado
        if Value then
            Rayfield:Notify({
   Title = "Heads up!",
   Content = "AutoSkillCheck Enabled.",
   Duration = 6.5,
   Image = 4483362458,
})
            -- Asegurarse de que no haya conexiones previas
            if _G.connection then
                _G.connection:Disconnect()
                _G.connection = nil
            end

            -- Inicia la verificaciأ³n del marcador
            _G.connection = runService.RenderStepped:Connect(function(deltaTime)
                timeElapsed = timeElapsed + deltaTime
                if timeElapsed >= checkInterval then
                    timeElapsed = 0
                    checkFramesPosition()
                end
            end)
        else
            Rayfield:Notify({
   Title = "Heads up!",
   Content = "AutoSkillCheck Disabled.",
   Duration = 6.5,
   Image = 4483362458,
})
            -- Detener la conexiأ³n cuando se apaga el toggle
            if _G.connection then
                _G.connection:Disconnect()
                _G.connection = nil
            end
        end
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Main Monsters Notifier",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
local toggleEnabled = Value -- Obtiene el estado del toggle
print("Toggle changed:", toggleEnabled)

if toggleEnabled then
    local notifiedMonsters = {} -- Tabla para rastrear monstruos ya notificados

    -- Función para enviar una notificación personalizada
    local function sendNotification(monsterName)
        Rayfield:Notify({
   Title = "Alert!",
   Content = "Main/Lethal Monsters Detected, Be Prepared.",
   Duration = 6.5,
   Image = 112318705260205,
})
    end

    -- Lista de nombres de monstruos a buscar
    local targetMonsters = {
        "DandyMonster",
        "VeeMonster",
        "SproutMonster",
        "ShellyMonster",
        "PebbleMonster",
        "AstroMonster",
        "BobetteMonster",
   }

    -- Busca la carpeta CurrentRoom en Workspace
    local currentRoom = game.Workspace:FindFirstChild("CurrentRoom")
    if currentRoom then
        print("mNotifier activated.")
        while toggleEnabled do
            for _, model in ipairs(currentRoom:GetChildren()) do
                if model:IsA("Model") then
                    -- Busca la carpeta Monsters dentro del modelo
                    local monstersFolder = model:FindFirstChild("Monsters")
                    if monstersFolder then
                        -- Revisa los monstruos dentro de Monsters
                        for _, monster in ipairs(monstersFolder:GetChildren()) do
                            if table.find(targetMonsters, monster.Name) and not notifiedMonsters[monster.Name] then
                                sendNotification(monster.Name) -- Envía la notificación personalizada
                                notifiedMonsters[monster.Name] = true -- Marca el monstruo como notificado
                            end
                        end
                    end
                end
            end

            -- Limpia los monstruos que ya no están en Monsters
            for monsterName, _ in pairs(notifiedMonsters) do
                local stillExists = false
                for _, model in ipairs(currentRoom:GetChildren()) do
                    local monstersFolder = model:FindFirstChild("Monsters")
                    if monstersFolder and monstersFolder:FindFirstChild(monsterName) then
                        stillExists = true
                        break
                    end
                end
                if not stillExists then
                    notifiedMonsters[monsterName] = nil -- Elimina monstruos que ya no están
                end
            end

            task.wait(5) -- Verifica nuevamente cada 5 segundos
        end
    else
        warn("didn't find da CurrentRoom folder in Workspace.")
    end
else
    print("mNotifier Turned off.")
end
   end,
})

local Button = Tab:CreateButton({
   Name = "Noclip(GUI Toggle)",
   Callback = function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")
local screenGui = Instance.new("ScreenGui")
local toggleButton = Instance.new("TextButton")
local uICorner = Instance.new("UICorner")

-- Add ScreenGui to the player's PlayerGui
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Set up toggle button properties
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Font = Enum.Font.FredokaOne
toggleButton.Position = UDim2.new(1, -125, 0, 0)
toggleButton.Text = "Noclip"
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 139)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Parent = screenGui

-- Add rounded corners to the button
uICorner.CornerRadius = UDim.new(0, 15)
uICorner.Parent = toggleButton

local collisionEnabled = false

local function makeUncollidable(part)
    part.CanCollide = false
end

local function onTouch(otherPart)
    if collisionEnabled then
        if otherPart:IsDescendantOf(game.Workspace.Terrain) then
            return
        end
        if not otherPart.CanCollide then
            return
        end
        makeUncollidable(otherPart)
    end
end

toggleButton.MouseButton1Click:Connect(function()
    collisionEnabled = not collisionEnabled
    toggleButton.Text = collisionEnabled and "Status: On" or "Status: Off"
    toggleButton.TextScaled = true
end)

local function attachTouchEvent()
    character = player.Character or player.CharacterAdded:Wait()
    head = character:WaitForChild("Head")
    head.Touched:Connect(onTouch)
end

attachTouchEvent()
player.CharacterAdded:Connect(attachTouchEvent)
   end,
})

local Toggle = Tab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "Toggle4", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head")

local collisionEnabled = Value

local function makeUncollidable(part)
    part.CanCollide = false
end

local function onTouch(otherPart)
    if collisionEnabled then
        if otherPart:IsDescendantOf(game.Workspace.Terrain) then
            return
        end
        if not otherPart.CanCollide then
            return
        end
        makeUncollidable(otherPart)
    end
end

local function toggleCollision()
    collisionEnabled = not collisionEnabled
    print("Collision is now: " .. (collisionEnabled and "Enabled" or "Disabled"))
end

local function attachTouchEvent()
    character = player.Character or player.CharacterAdded:Wait()
    head = character:WaitForChild("Head")
    head.Touched:Connect(onTouch)
end

-- Toggle collision with a key press (for example, the "T" key)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.T then
        toggleCollision()
    end
end)

attachTouchEvent()
player.CharacterAdded:Connect(attachTouchEvent)
   end,
})

local Toggle = Tab:CreateToggle({
    Name = "Toggle Example",
    CurrentValue = false,
    Flag = "Toggle5",
    Callback = function(Value)
        local screenGui = Instance.new("ScreenGui")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main frame for the notice box
local mainFrame = Instance.new("Frame")
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5) -- Set the anchor point to the center
mainFrame.Size = UDim2.new(0, 0, 0, 0) -- Start small
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0) -- Center position
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = mainFrame

-- Tween to grow the main frame
local tweenService = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(
    1, -- Time
    Enum.EasingStyle.Quint, -- EasingStyle
    Enum.EasingDirection.Out, -- EasingDirection
    0, -- RepeatCount
    false, -- Reverses
    0 -- DelayTime
)

local goal = {}
goal.Size = UDim2.new(0.5, 0, 0.5, 0) -- Target size

local tween = tweenService:Create(mainFrame, tweenInfo, goal)
tween:Play()

-- Create the text label for the notice text
local noticeText = Instance.new("TextLabel")
noticeText.Size = UDim2.new(1, -20, 1, -40)
noticeText.Position = UDim2.new(0, 10, 0, 10)
noticeText.BackgroundTransparency = 1
noticeText.Text = "Activation of The 'Float' Script Can't be Turned off Only if Reset, Do you still wish to Continue?"
noticeText.TextColor3 = Color3.fromRGB(200, 200, 200) -- White text
noticeText.TextWrapped = true
noticeText.Font = Enum.Font.FredokaOne
noticeText.TextSize = 18
noticeText.Parent = mainFrame

-- Create the warning text label
local warnText = Instance.new("TextLabel")
warnText.Size = UDim2.new(1, -20, 0, 30)
warnText.Position = UDim2.new(0, 10, 0, 5)
warnText.BackgroundTransparency = 1
warnText.Text = "Warning ⚠️"
warnText.TextColor3 = Color3.fromRGB(255, 0, 0) -- Red text for warning
warnText.TextWrapped = true
warnText.Font = Enum.Font.FredokaOne
warnText.TextSize = 22
warnText.Parent = mainFrame

-- Create the 'Ok' button
local continueButton = Instance.new("TextButton")
continueButton.Size = UDim2.new(0.4, 0, 0.2, 0)
continueButton.Position = UDim2.new(0.1, 0, 0.75, 0)
continueButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255) -- Blue button
continueButton.Text = "Continue"
continueButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
continueButton.Font = Enum.Font.FredokaOne
continueButton.TextSize = 18
continueButton.Parent = mainFrame

local uiCorner3 = Instance.new("UICorner")
uiCorner3.CornerRadius = UDim.new(0, 10)
uiCorner3.Parent = continueButton

-- Create the 'Cancel' button
local cancelButton = Instance.new("TextButton")
cancelButton.Size = UDim2.new(0.4, 0, 0.2, 0)
cancelButton.Position = UDim2.new(0.5, 0, 0.75, 0)
cancelButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red button
cancelButton.Text = "Cancel"
cancelButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
cancelButton.Font = Enum.Font.FredokaOne
cancelButton.TextSize = 18
cancelButton.Parent = mainFrame

local uiCorner4 = Instance.new("UICorner")
uiCorner4.CornerRadius = UDim.new(0, 10)
uiCorner4.Parent = cancelButton

-- Add functionality to the 'Ok' button
continueButton.MouseButton1Click:Connect(function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local desiredFloatHeight = 6.4
    local floatEnabled = true
    local renderSteppedConnection

    local function ensureZeroGravity()
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            -- Remove any existing BodyForce
            for _, child in ipairs(humanoidRootPart:GetChildren()) do
                if child:IsA("BodyForce") then
                    child:Destroy()
                end
            end

            -- Set player's gravity to zero
            local bodyForce = Instance.new("BodyForce")
            bodyForce.Force = Vector3.new(0, workspace.Gravity * humanoidRootPart.AssemblyMass, 0)
            bodyForce.Parent = humanoidRootPart
        end
    end

    local function updatePlayerPositionInstant()
        if not floatEnabled then return end

        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            local rayOrigin = humanoidRootPart.Position
            local rayDirection = Vector3.new(0, -100, 0)
            local raycastResult = workspace:Raycast(rayOrigin, rayDirection)
            if raycastResult and raycastResult.Instance.CanCollide then
                local groundY = raycastResult.Position.Y
                local desiredY = groundY + desiredFloatHeight
                humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position.X, desiredY, humanoidRootPart.Position.Z)
            end
        end
    end

    local function initializeZeroGravity()
        ensureZeroGravity()
        renderSteppedConnection = game:GetService("RunService").RenderStepped:Connect(updatePlayerPositionInstant)
    end

    if floatEnabled then
        initializeZeroGravity()
        print("Floating is now: Enabled")
    else
        if renderSteppedConnection then
            renderSteppedConnection:Disconnect()
            renderSteppedConnection = nil
        end
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            -- Ensure all BodyForce instances are removed
            for _, child in ipairs(humanoidRootPart:GetChildren()) do
                if child:IsA("BodyForce") then
                    child:Destroy()
                end
            end
            -- Reset the player's position to the ground level
            local rayOrigin = humanoidRootPart.Position
            local rayDirection = Vector3.new(0, -100, 0)
            local raycastResult = workspace:Raycast(rayOrigin, rayDirection)
            if raycastResult and raycastResult.Instance.CanCollide then
                local groundY = raycastResult.Position.Y
                humanoidRootPart.CFrame = CFrame.new(humanoidRootPart.Position.X, groundY, humanoidRootPart.Position.Z)
            end
        end
        print("Floating is now: Disabled")
    end

    -- Fade-out effect
    for i = 1, 30 do
        mainFrame.BackgroundTransparency = i/30
        noticeText.TextTransparency = i/30
        warnText.TextTransparency = i/30
        continueButton.BackgroundTransparency = i/30
        continueButton.TextTransparency = i/30
        cancelButton.BackgroundTransparency = i/30
        cancelButton.TextTransparency = i/30
        wait(0.033)
    end
    screenGui:Destroy()
end)

-- Add functionality to the 'Cancel' button
cancelButton.MouseButton1Click:Connect(function()
    print("Cancel button clicked")

    -- Fade-out effect
    for i = 1, 30 do
        mainFrame.BackgroundTransparency = i/30
        noticeText.TextTransparency = i/30
        warnText.TextTransparency = i/30
        continueButton.BackgroundTransparency = i/30
        continueButton.TextTransparency = i/30
        cancelButton.BackgroundTransparency = i/30
        cancelButton.TextTransparency = i/30
        wait(0.033)
    end
    screenGui:Destroy()
end)
    end,
})

local Tab = Window:CreateTab("Animations", 4483362458) -- Title, Image

local Label = Tab:CreateLabel("Working on it.", 4483362458, Color3.fromRGB(255, 255, 255), false)

local Tab = Window:CreateTab("other hubs")

local Button = Tab:CreateButton({
   Name = "spooks hub",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/ApparentlySpooks/dandysworldspookshub/refs/heads/main/obfuscated%20spooks%20hub%20dandys%20world.lua'))()
   end,
})

local Button = Tab:CreateButton({
   Name = "hxc hub",
   Callback = function()
   loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/hooaczx/Script/main/lnfinitive%20Ui"))()
   end,
})

local Button = Tab:CreateButton({
   Name = "egas hub",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/Amo1224gus/iriska/refs/heads/main/egashub.lua"))();
   end,
})

local Button = Tab:CreateButton({
   Name = "Noxious hub",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/y8eKgLSs"))()
   end,
})

local Button = Tab:CreateButton({
   Name = "hex hub",
   Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/N4Y01FkS"))();
   end,
})

local Button = Tab:CreateButton({
   Name = "glisten's animation closet",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/RodeStriker/TheDandyHelper/refs/heads/main/GAC"))()
   end,
})

local Section = Tab:CreateSection("End")

local Tab = Window:CreateTab("Credits")
